#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        plus {
            bindings = <&kp PLUS>;
            key-positions = <2 3>;
        };

        mius {
            bindings = <&kp MINUS>;
            key-positions = <3 4>;
        };

        l_bracket {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 5>;
        };

        r_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 8>;
        };

        Underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <8 9>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <9 10>;
            layers = <0>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <0 13>;
        };

        backtick {
            bindings = <&kp GRAVE>;
            key-positions = <13 28>;
        };

        Quote_Double {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <16 17>;
        };

        Left_Bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <17 18>;
        };

        Left_Brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <33 32>;
        };

        Right_Bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <22 23>;
        };

        Apostrophe {
            bindings = <&kp APOSTROPHE>;
            key-positions = <23 24>;
        };

        Right_Brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <36 37>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <15 16>;
        };

        Ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <25 24>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "DEFAULT";
            bindings = <
&kp ESC              &kp Q  &kp W               &kp E           &kp R               &kp T                                  &kp UP                &kp Y      &kp U            &kp I               &kp O                &kp P     &kp LEFT_BRACKET
&kp TAB              &kp A  &mt LEFT_CONTROL S  &mt LEFT_ALT D  &mt LEFT_COMMAND F  &kp G                        &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &mt RIGHT_GUI J  &mt RIGHT_ALT K     &mt RIGHT_CONTROL L  &kp SEMI  &kp SQT
&mt LSHIFT CAPSLOCK  &kp Z  &kp X               &kp C           &kp V               &kp B          &kp C_MUTE              &kp DOWN              &kp N      &kp M            &kp COMMA           &kp DOT              &kp FSLH  &kp RIGHT_BRACKET
                                                &kp LGUI        &mo 2               &mt LCTRL RET                                                &kp SPACE  &mo 1            &mt RALT RIGHT_GUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "LOWER";
            bindings = <
&kp TILDE   &kp N1           &kp N2       &kp N3    &kp HOME    &kp N5                                            &mmv MOVE_UP                     &kp PLUS      &kp N7  &kp N8  &kp N9  &kp N0    &kp BSPC
&kp GRAVE   &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                       &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS     &kp N4  &kp N5  &kp N6  &kp FSLH  &kp PG_UP
&kp LSHIFT  &trans           &trans       &trans    &kp END     &trans       &kp LG(C_BRI_MIN)                    &mmv MOVE_DOWN                   &kp ASTERISK  &kp N1  &kp N2  &kp N3  &kp RET   &kp PG_DN
                                          &mo 3     &trans      &trans                                                                             &trans        &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp LG(C_BRIGHTNESS_INC) LG(C_BRIGHTNESS_DEC)>;
        };

        raise {
            bindings = <
&kp F16  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5                     &trans          &trans    &trans    &trans        &trans     &kp DELETE  &kp BACKSPACE
&kp F17  &kp F6   &kp F7   &kp F8   &kp F9   &kp F10            &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans      &trans
&kp F18  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15  &trans            &trans          &trans    &kp LGUI  &kp LALT      &kp LCTRL  &kp LSHFT   &trans
                           &trans   &trans   &trans                                     &trans    &trans    &trans
            >;

            label = "raise";
        };

        adjust {
            display-name = "ADJUST";
            bindings = <
&trans  &kp N1           &kp N2          &kp N3        &kp N4        &kp N5                                         &mmv MOVE_UP                     &kp N6           &kp N7           &kp N8           &kp N9           &kp N0    &kp BSPC
&trans  &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &trans        &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN
                                         &trans        &trans        &trans                                                                          &kp INS          &kp DEL          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
