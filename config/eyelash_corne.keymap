// Настройки указателя мыши
#define ZMK_POINTING_DEFAULT_MOVE_VAL 600  // Скорость движения курсора
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // Скорость прокрутки

// Подключение необходимых библиотек и определений
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <behaviors/num_word.dtsi> 

#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

// Пользовательские хелперы и определения
#include "zmk-helpers/helper.h"
#include "eyelash_corne/keymap.h"

// Определение слоев клавиатуры
#define BASE 0      // Основной слой
#define SYM 1       // Слой символов
#define SYSTEM 2    // Системный слой
#define GAME 3      // Игровой слой
#define NUM 4       // Цифровой слой
#define ARROWS 5    // Стрелки

// Определение групп клавиш для удобства настройки
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // Левая половина
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // Правая половина
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2   // Клавиши для больших пальцев

// Время для быстрого нажатия в миллисекундах
#define QUICK_TAP_MS 175

// Определение комбинации копирования/вырезания: копировать по одному нажатию, вырезать по двойному
// Не используется
ZMK_TAP_DANCE(copy_cut, bindings = <&kp LG(C)>, <&kp LG(X)>;
              tapping-term-ms = <200>;)

// Переключение слоев по двойному нажатию
// Не используется
ZMK_TAP_DANCE(layerdance, bindings = <&tog NUM>, <&tog ARROWS>;
              tapping-term-ms = <200>;)

// удержание или одиночное нажатие - LGUI, двойное нажатие - ENTER
ZMK_TAP_DANCE(td_gui_ret, bindings = <&kp LGUI>, <&kp ENTER>;
              tapping-term-ms = <200>;)
              
// удержание или одиночное нажатие - LCTRL, двойное нажатие - SPACE
ZMK_TAP_DANCE(td_ctrl_spc, bindings = <&kp LCTRL>, <&kp SPACE>;
              tapping-term-ms = <220>;)
              
// Настройка поведения клавиш home-row mods для левой руки
ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <200>;
    require-prior-idle-ms = <QUICK_TAP_MS>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;
    bindings = <&kp>, <&kp>;
)

// Настройка поведения клавиш home-row mods для правой руки
ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <200>;
    require-prior-idle-ms = <QUICK_TAP_MS>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;
    bindings = <&kp>, <&kp>;
)

// Настройка масштабирования движения мыши
&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

// Настройка масштабирования прокрутки
&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

// Определение умного цифрового слоя
// Удерживаете клавишу - временный доступ к цифровому слою
// Одно нажатие - цифровой слой активен пока вводите цифры
// Двойное нажатие - цифровой слой активен для следующего, одного нажатия
#define SMART_NUM &smart_num NUM BASE
ZMK_HOLD_TAP(smart_num, bindings = <&mo>, <&num_dance>; flavor = "balanced";
             tapping-term-ms = <200>; quick-tap-ms = <QUICK_TAP_MS>;)
ZMK_TAP_DANCE(num_dance, bindings = <&num_word NUM>, <&sl NUM>;
              tapping-term-ms = <200>;)

// Настройки прокрутки мыши
&msc {
    acceleration-exponent = <1>;      // Экспонента ускорения
    time-to-max-speed-ms = <100>;    // Время до максимальной скорости
    delay-ms = <0>;                  // Задержка
};

// Настройки движения мыши
&mmv {
    time-to-max-speed-ms = <500>;    // Время до максимальной скорости
    acceleration-exponent = <1>;      // Экспонента ускорения
    trigger-period-ms = <16>;        // Период срабатывания
};


/ {
    // Определение условных слоев
    conditional_layers {
        compatible = "zmk,conditional-layers";

        // Активация системного слоя при одновременном включении SYM и NUM
        adjust_layer {
            if-layers = <SYM NUM>;
            then-layer = <SYSTEM>;
        };
    };

    // Определение пользовательских поведений клавиш
    behaviors {
        leader1: leader1 {
            compatible = "zmk,behavior-leader-key";
            #binding-cells = <0>;
            r_ws { sequence = <L>; bindings = <&kp LC(LG(RIGHT_ARROW))>; };
            l_ws { sequence = <H>; bindings = <&kp LC(LG(LEFT_ARROW))>; };
            ctrl_tab_d_seq { sequence = <D B>; bindings = <&ctrl_tab_d>; };
            ws1 { sequence = <Z>; bindings = <&kp LC(N1)>; };
            ws2 { sequence = <X>; bindings = <&kp LC(N2)>; };

            to_arrows { sequence = <A R>; bindings = <&to ARROWS>; };
            arrows_2_base { sequence = <F6 F4>; bindings = <&to BASE>; };

            cmd_0 { sequence = <GT>; bindings = <&kp LG(N0)>; };
            cmd_1 { sequence = <LSHFT>; bindings = <&kp LG(N1)>; };
            cmd_2 { sequence = <LCTRL>; bindings = <&kp LG(N2)>; };
            cmd_3 { sequence = <LALT>; bindings = <&kp LG(N3)>; };
            cmd_4 { sequence = <LGUI>; bindings = <&kp LG(N4)>; };
            cmd_5 { sequence = <COLON>; bindings = <&kp LG(N5)>; };
        };
        sym_num: sym_num {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&to>;
        };
        gui_ret: gui_ret {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&td_gui_ret>;
        };
    };

    // Настройка энкодера для управления RGB подсветкой
    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    // Настройка энкодера для прокрутки
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    // Определение макросов
    macros {
        ctrl_tab_d: ctrl_tab_d {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <20>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp TAB>
                , <&macro_tap &kp D>
                , <&macro_release &kp LCTRL>
                ;
        };
    };
              
    combos {
        compatible = "zmk,combos";

        //// Нижний ряд (слева)

        // XC ` обратная кавычка
        combo_grave {
            bindings = <&kp GRAVE>;
            key-positions = <LB3 LB2>;
            timeout-ms = <20>;
            layers = <BASE SYM NUM SYSTEM ARROWS>;
        };

        // CV PIPE
        paste {
            bindings = <&kp PIPE>;
            key-positions = <LB2 LB1>;
            timeout-ms = <20>;
            layers = <BASE SYM NUM SYSTEM ARROWS>;
        };

        // VB левая квадратная скобка [
        combo_LEFT_BRACKET {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <LB1 LB0>;
            timeout-ms = <20>;
            layers = <BASE SYM NUM SYSTEM ARROWS>;
        };

        // combo_ {
        //     bindings = <&kp>;
        //     key-positions = <LB4 LB3>;
        //     timeout-ms = <20>;
        //     layers = <BASE SYM NUM SYSTEM ARROWS>;
        // };

        // ZV повторить (Z + V)
        redo {
            bindings = <&kp LG(LS(Z))>;
            key-positions = <LB4 LB1>;
            timeout-ms = <20>;
            layers = <BASE SYM NUM SYSTEM ARROWS>;
        };
        
        //// Нижний ряд (справа)
        
        // NM правая квадратная скобка ]
        combo_RIGHT_BRACKET {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <RB0 RB1>;
            timeout-ms = <20>;
            layers = <BASE SYM NUM SYSTEM ARROWS>;
        };
        
        // M, & амперсанд
        combo_ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <RB1 RB2>;
            timeout-ms = <20>;
            layers = <BASE SYM NUM SYSTEM ARROWS>;
        };
        
        // точка и 00 ~ тильда
        combo_TILDE {
            bindings = <&kp TILDE>;
            key-positions = <RB2 RB3>;
            timeout-ms = <20>;
            layers = <BASE SYM NUM SYSTEM ARROWS>;
        };

        // combo_ {
        //     bindings = <&kp >;
        //     key-positions = <RB3 RB4>;
        //     timeout-ms = <20>;
        // };

        // combo_test_rb4_rb5 {
        //     bindings = <&kp N3>;
        //     key-positions = <RB4 RB5>;
        //     timeout-ms = <20>;
        // };
        
        //// Верхний ряд (слева)

        // combo_lt5_lt4 {
        //     bindings = <&kp >;
        //     key-positions = <LT5 LT4>;
        //     timeout-ms = <20>;
        // };
        
        // QW
        // combo_ {
        //     bindings = <&kp >;
        //     key-positions = <LT4 LT3>;
        //     timeout-ms = <20>;
        //     layers = <BASE SYM NUM SYSTEM ARROWS>;
        // };
        
        // WE левая фигурная скобка
        combo_left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <LT3 LT2>;
            timeout-ms = <20>;
            layers = <BASE SYM NUM SYSTEM ARROWS>;
        };
        
        // ER ' апостроф/одинарная кавычка
        combo_SINGLE_QUOTE {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <LT2 LT1>;
            timeout-ms = <20>;
            layers = <BASE SYM NUM SYSTEM ARROWS>;
        };
        
        // RT - знак больше >
        combo_GREATER_THAN {
            bindings = <&kp GREATER_THAN>;
            key-positions = <LT1 LT0>;
            timeout-ms = <20>;
            layers = <BASE SYM NUM SYSTEM ARROWS>;
        };
        
        //// Верхний ряд (справа)

        // YU знак меньше <
        combo_LESS_THAN {
            bindings = <&kp LESS_THAN>;
            key-positions = <RT0 RT1>;
            timeout-ms = <20>;
        };
        
        // UI " Двойная кавычка
        combo_DOUBLE_QUOTES {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <RT1 RT2>;
            timeout-ms = <20>;
        };
        
        // IO правая фигурная скобка
        combo_RIGHT_BRACE {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <RT2 RT3>;
            timeout-ms = <20>;
        };
        
        // OP 
        // combo_GREATER_THAN {
        //     bindings = <&kp>;
        //     key-positions = <RT3 RT4>;
        //     timeout-ms = <20>;
        // };
        
        // combo_rt4_rt5 {
        //     bindings = <>;
        //     key-positions = <RT4 RT5>;
        //     timeout-ms = <20>;
        // };

        ///// Средний ряд (слева)
        // combo_lm5_lm4 {
        //     bindings = <&kp>;
        //     key-positions = <LM5 LM4>;
        //     timeout-ms = <20>;
        // };
        
        // combo_ {
        //     bindings = <&kp >;
        //     key-positions = <LM4 LM3>;
        //     timeout-ms = <20>;
        //     layers = <BASE SYM NUM SYSTEM ARROWS>;
        // };
        
        // SD левая круглая скобка 
        combo_left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <LM3 LM2>;
            timeout-ms = <20>;
            layers = <BASE SYM NUM SYSTEM ARROWS>;
        };
        
        // DF ^
        combo_caret {
            bindings = <&kp CARET>;
            key-positions = <LM2 LM1>;
            timeout-ms = <20>;
            layers = <BASE SYM NUM SYSTEM ARROWS>;
        };
        
        // FG минус/тире/дефис
        combo_minus {
            bindings = <&kp MINUS>;
            key-positions = <LM1 LM0>;
            timeout-ms = <20>;
            layers = <BASE SYM NUM SYSTEM ARROWS>;
        };

        //// Средний ряд (справа)

        // HJ равно
        combo_EQUAL {
            bindings = <&kp EQUAL>;
            key-positions = <RM0 RM1>;
            timeout-ms = <20>;
        };
        
        // JK $
        combo_dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <RM1 RM2>;             
            timeout-ms = <20>;
        };
        
        // KL правая круглая скобка
        combo_right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <RM2 RM3>;
            timeout-ms = <20>;
        };
        
        // combo_rm3_rm4 {
        //     bindings = <&kp >;
        //     key-positions = <RM3 RM4>;
        //     timeout-ms = <20>;
        // };
        
        // звезда и бомба DEL
        // combo_del {
        //     bindings = <&kp >;
        //     key-positions = <RM4 RM5>;
        //     timeout-ms = <20>;
        // };
    };
    // Определение раскладки клавиатуры
    keymap {
        compatible = "zmk,keymap";

        // Основной слой - стандартная раскладка с модификаторами
        default_layer {
            display-name = "Base";
            bindings = <
//╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮                                            ╭───────────────╮                        ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
    &kp TAB         &hml LCTRL Q    &kp W           &kp E           &kp R           &kp T                                                       &kp LA(LC(LG(E)))                         &kp Y           &kp U           &kp I           &kp O           &kp P           &kp BSPC
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤                            ╭───────────────┼───────────────┼───────────────╮        ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
    &kp ESC         &hml LSHFT A    &hml LCTRL S    &hml LALT D     &hml LGUI F     &kp G                            &kp LC(LA(LEFT_ARROW)) &kp LA(LC(UP_ARROW)) &kp LC(LA(RIGHT_ARROW))  &kp H           &hmr RGUI J     &hmr RALT K    &hmr RCTRL L     &hmr RSHFT SEMI &kp SQT
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤    ╭───────────────╮       ╰───────────────┼───────────────┼───────────────╯        ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
    &leader1        &kp Z           &kp X           &kp C           &kp V           &kp B                &kp C_MUTE                             &kp LA(LC(LG(D)))                         &kp N           &kp M           &kp COMMA       &kp DOT         &kp FSLH        &tog GAME
//╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤    ╰───────────────╯                       ╰───────────────╯                        ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────╯
                                              &gui_ret LGUI ENTER   &mo NUM         &lt SYM SPACE                                                                                       &lt ARROWS ENTER  SMART_NUM       &kp RGUI
//                                                ╰───────────────┴───────────────┴───────────────╯                                                                                     ╰───────────────┴───────────────┴───────────────╯
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        // Слой символов - специальные символы и управление мышью
        sym_layer {
            display-name = "Symbols";
            bindings = <
//╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮                                            ╭───────────────╮                        ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
    &kp LT          &kp EXCL        &kp AT          &kp POUND       &kp DOLLAR      &kp PERCENT                                                  &kp LA(LC(E))                            &kp CARET       &kp AMPS        &kp ASTRK       &kp SLASH       &kp BSLH        &kp DEL
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤                            ╭───────────────┼───────────────┼───────────────╮        ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
    &kp GT          &kp LSHFT       &kp LCTRL       &kp LALT        &kp LGUI        &kp COLON                                   &kp F18    &kp LA(LC(LG(UP_ARROW))) &kp F19               &kp UNDER       &kp PIPE        &kp EQUAL       &kp SQT         &kp GRAVE       &kp PG_UP
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤    ╭───────────────╮       ╰───────────────┼───────────────┼───────────────╯        ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
    &leader1        &kp RPAR        &kp RBRC        &kp RBKT        &kp COMMA       &kp SEMI             &kp C_MUTE                              &kp LA(LC(D))                            &kp MINUS       &kp PLUS        &kp QMARK       &kp DQT         &kp TILDE       &trans
//╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤    ╰───────────────╯                       ╰───────────────╯                        ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────╯
                                                    &trans          &trans          &kp ENTER                                                                                             &trans          &trans          &trans
//                                                ╰───────────────┴───────────────┴───────────────╯                                                                                     ╰───────────────┴───────────────┴───────────────╯
            >;
            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        // Системный слой - функциональные клавиши и управление системой
        system_layer {
            display-name = "System";
            bindings = <
//╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮                                            ╭───────────────╮                        ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
    &studio_unlock  &kp F1          &kp F2          &kp F3          &kp F4          &kp F5                                                       &kp UP                                   &kp F6          &kp F7          &kp F8          &kp F9          &kp F10         &kp F11
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤                            ╭───────────────┼───────────────┼───────────────╮        ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
    &trans          &kp F13         &kp F14         &kp F15         &kp F16         &kp F17                                      &kp LEFT        &kp ENTER       &kp RIGHT                &bootloader     &mkp LCLK       &mkp MCLK       &mkp RCLK       &kp PSCRN       &kp F12
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤    ╭───────────────╮       ╰───────────────┼───────────────┼───────────────╯        ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
  &ext_power EP_TOG &sys_reset      &trans          &bootloader     &out OUT_USB    &out OUT_BLE         &kp C_MUTE                              &kp DOWN                                 &trans          &trans          &bootloader     &sys_reset      &kp SLCK        &kp PAUSE_BREAK
//╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤    ╰───────────────╯                       ╰───────────────╯                        ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────╯
                                                    &trans          &trans          &trans                                                                                                &trans          &trans          &trans
//                                                ╰───────────────┴───────────────┴───────────────╯                                                                                     ╰───────────────┴───────────────┴───────────────╯
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        // Игровой слой - упрощенная раскладка без модификаторов
        game_layer {
            display-name = "Game";
            bindings = <
//╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮                                            ╭───────────────╮                        ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
    &kp TAB         &kp Q           &kp W           &kp E           &kp R           &kp T                                                        &kp UP                                   &kp Y           &kp U           &kp I           &kp O           &kp P           &kp BSPC
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤                            ╭───────────────┼───────────────┼───────────────╮        ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
    &kp ESC         &kp A           &kp S           &kp D           &kp F           &kp G                                        &kp LEFT        &kp ENTER       &kp RIGHT                &kp H           &kp J           &kp K           &kp L           &kp SEMI        &kp SQT
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤    ╭───────────────╮       ╰───────────────┼───────────────┼───────────────╯        ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
    &kp LSHFT       &kp Z           &kp X           &kp C           &kp V           &kp B                &kp C_MUTE                              &kp DOWN                                 &kp N           &kp M           &kp COMMA       &kp DOT         &kp FSLH        &tog GAME
//╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤    ╰───────────────╯                       ╰───────────────╯                        ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────╯
                                                    &td_gui_ret     &kp LALT        &td_ctrl_spc                                                                                          &kp ENTER       &mo NUM         &kp RGUI
//                                                ╰───────────────┴───────────────┴───────────────╯                                                                                     ╰───────────────┴───────────────┴───────────────╯
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        // Цифровой слой - цифры и управление мышью
        num_layer {
            display-name = "Num";
            bindings = <
//╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮                                            ╭───────────────╮                        ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
    &trans          &trans          &trans          &trans          &trans          &trans                                                       &kp UP                                   &trans          &kp C_PREV      &kp C_PP        &kp C_NEXT      &trans          &kp DEL
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤                            ╭───────────────┼───────────────┼───────────────╮        ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
    &trans          &kp N1          &kp N2          &kp N3          &kp N4          &kp N5                                       &kp LEFT        &kp ENTER       &kp RIGHT                &kp N6          &kp N7          &kp N8          &kp N9          &kp N0          &trans
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤    ╭───────────────╮       ╰───────────────┼───────────────┼───────────────╯        ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
    &leader1        &kp N6          &kp N7          &kp N8          &kp N9          &kp N0               &kp C_MUTE                              &kp DOWN                                 &trans          &trans          &trans          &trans          &kp BACKSLASH   &trans
//╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤    ╰───────────────╯                       ╰───────────────╯                        ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────╯
                                                    &trans          &to BASE        &trans                                                                                                &trans          &trans          &trans
//                                                ╰───────────────┴───────────────┴───────────────╯                                                                                     ╰───────────────┴───────────────┴───────────────╯
            >;
            sensor-bindings = <&scroll_encoder>;
        };
        
        // Стрелки - упрощенная раскладка без модификаторов
        arrow_layer {
            display-name = "Arrows";
            bindings = <
//╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮                                            ╭───────────────╮                        ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
    &kp F16         &kp F1          &kp F2          &kp F3          &kp F4          &kp F5                                                       &kp UP                                   &trans          &kp HOME        &kp PAGE_UP     &trans          &trans          &trans
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤                            ╭───────────────┼───────────────┼───────────────╮        ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
    &kp F17         &kp F6          &kp F7          &kp F8          &kp F9          &kp F10                                      &kp LEFT        &kp ENTER       &kp RIGHT                &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &trans          &trans
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤    ╭───────────────╮       ╰───────────────┼───────────────┼───────────────╯        ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
    &trans          &kp F11         &kp F12         &kp F13         &kp F14         &kp F15              &kp C_MUTE                              &kp DOWN                                 &trans          &kp END         &kp PAGE_DOWN   &trans          &trans          &trans
//╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤    ╰───────────────╯                       ╰───────────────╯                        ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────╯
                                                    &trans          &trans          &trans                                                                                                &trans          &trans          &trans
//                                                ╰───────────────┴───────────────┴───────────────╯                                                                                     ╰───────────────┴───────────────┴───────────────╯
            >;
            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };
    };
};
